// Accessibility ----------------------

// Hide for both screenreaders and browsers
//   css-discuss.incutio.com/wiki/Screenreader_Visibility
@mixin hide-from-all {
  display: none;
  visibility: hidden;
}

// Hide only visually, but have it available for screenreaders
//   www.webaim.org/techniques/css/invisiblecontent/
//   Solution from: j.mp/visuallyhidden - Thanks Jonathan Neal!
@mixin screenreaders-only {
  position: absolute !important;
  clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
}

// Hide visually and from screenreaders, but maintain layout
@mixin invisible {
  visibility: hidden;
}

// Remove text for image replacement
@mixin hide-text {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

// Micro clearfix
// http://nicolasgallagher.com/micro-clearfix-hack/

%clearfix {
  zoom: 1;

  &:before,
  &:after {
    content: '';
    display: table;
  }

  &::before,
  &::after {
    content: '';
    display: table;
  }

  &:after {
    clear: both;
  }

  &::after {
    clear: both;
  }
}

// REM mixin
$baseline-px: 16px;

@mixin rem($property, $px-values) {
  $baseline-rem: $baseline-px / 1rem;
  #{$property}: $px-values;
  @if type-of($px-values) == "number" {
    #{$property}: $px-values / $baseline-rem;
  } @else {
    $rem-values: unquote("");
    @each $value in $px-values {
      @if $value == 0 or type-of($value) == "string" or type-of($value) == "color" {
        $rem-values: append($rem-values, $value);
      } @else {
        $rem-values: append($rem-values, $value / $baseline-rem);
      }
    }
    #{$property}: $rem-values;
  }
}

@mixin breakpoint($point) {
  @if $point == wide {
    @media screen and (min-width: 1099px) {
      & {
        @content;
      }
    }
  }
  @else if $point == desktop {
    @media screen and (min-width: 769px) {
      & {
        @content;
      }
    }
  }
  @else if $point == tablet {
    @media screen and (min-width: 481px){
      & {
        @content;
      }
    }
  }
  // Not required, but useful to styling out IE8
  @else if $point == mobile {
    @media screen and (max-width: 480px) {
      & {
        @content;
      }
    }
  }
  @else if $point == height-smallest {
    @media screen and (min-height: 640px) {
      & {
        @content;
      }
    }
  }
  @else if $point == height-small {
    @media screen and (min-height: 740px) {
      & {
        @content;
      }
    }
  }
  @else if $point == height-medium {
    @media screen and (min-height: 850px) {
      & {
        @content;
      }
    }
  }
  @else if $point == height-big {
    @media screen and (min-height: 1200px) {
      & {
        @content;
      }
    }
  }
  @else {
    @media screen and (min-width: $point) {
      & {
        @content;
      }
    }
  }
}

@mixin translateX($d) {
  -webkit-transform: translate3d($d, 0, 0);
  -moz-transform: translate3d($d, 0, 0);
  -ms-transform: translate3d($d, 0, 0);
  transform: translate3d($d, 0, 0);
  -webkit-transition: -webkit-transform .3s ease;
  -moz-transition: -moz-transform .3s ease;
  -ms-transition: -ms-transform .3s ease;
  transition: transform .3s ease;
}

@mixin appearance($a) {
  -webkit-appearance: $a;
  -moz-appearance: $a;
  -ms-appearance: $a;
  appearance: $a;
}

$black:         #000 !default;
$darkgray:      #333;
$midgray:       #666;
$gray:          #adb8c1;
$lightgray:     #f6f6f6;
$lightergray:   #e0e0e0;
$white:         #fff !default;

$navy:          #0c304a;
$blue:          #304e64;
$darkblue:      #004576;
$borderblue:    #7399b7;
$midblue:       #366996;
$lightblue:     #82a1bd;
$lighterblue:   #359aec;
$paleblue:      #f2f5f8;
$lightestblue:  #e1eaf5;

$paleyellow:    #fffbe4;
$palegreen:     #d2f1cf;
$salmon:        #ea4f62;
$bronze:        #e5e1dc;

$cyan:          #0084ee;
$green:         #3fc76e;
$cherry:        #df0620;
$rebeccapurple: #663399;

// Vars
$warning:       $cherry;
$cta:           $green;
$highlight:     $lighterblue;
$brand:         $darkblue;
$base:          $darkgray;
$soft:          $lightergray;

// Layout widths
$w-sml:         700px;
$w-mid:         900px;
$w-lge:         1400px;

%wrapper {
  margin: 0 auto;
  padding: 0 3%;
  width: 94%;

  @include breakpoint(tablet) {
    @include rem(max-width, $w-lge);
    @include rem(padding, 15px);
    width: 100%;
  }
}

%grad-bottom {
  background: -moz-linear-gradient(top, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, .9) 100%); // /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, rgba(0, 0, 0, 0)), color-stop(100%, rgba(0, 0, 0, .9))); // /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, .9) 100%); // /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, .9) 100%); // /* Opera 11.10+ */
  background: -ms-linear-gradient(top, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, .9) 100%); // /* IE10+ */
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, .9) 100%); // /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000', endColorstr='#cc000000', GradientType=0); // /* IE6-9 */
}

%grad-top {
  background: -moz-linear-gradient(top, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, .9) 100%); // /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(255%, rgba(255, 255, 255, 0)), color-stop(100%, rgba(255, 255, 255, .9))); // /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, .9) 100%); // // /* Chrome1255+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, .9) 100%); // /* Opera 11.1255+ */
  background: -ms-linear-gradient(top, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, .9) 100%); // /* IE1255+ */
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, .9) 100%); // /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#FFFFFF', endColorstr='#FFFFFF', GradientType=0); // /* IE6-9 */
}

%grad-left {
  background: -moz-linear-gradient(right, rgba($cyan, 0) 66%, rgba($cyan, .9) 100%); // /* FF3.6+ */
  background: -webkit-gradient(linear, right top, left bottom, color-stop(66%, rgba($cyan, 0)), color-stop(100%, rgba($cyan, .9))); // /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(right, rgba($cyan, 0) 66%, rgba($cyan, .9) 100%); // /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(right, rgba($cyan, 0) 66%, rgba($cyan, .9) 100%); // /* Opera 11.10+ */
  background: -ms-linear-gradient(right, rgba($cyan, 0) 66%, rgba($cyan, .9) 100%); // /* IE10+ */
  background: linear-gradient(to left, rgba($cyan, 0) 66%, rgba($cyan, .9) 100%); // /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000', endColorstr='#cc000000', GradientType=1); // /* IE6-9 */
}

$cdnurl: '//uom-templates.s3.amazonaws.com/shared';

// IE9 compat
// IE6-8
// modern browsers
// Safari, Android, iOS
// Legacy iOS

@font-face {
  font-family: 'Roboto';
  src: url("#{$cdnurl}/fonts/Roboto-Bold.eot");
  src: url("#{$cdnurl}/fonts/Roboto-Bold.eot#iefix") format('embedded-opentype'),
       url("#{$cdnurl}/fonts/Roboto-Bold.woff") format('woff'),
       url("#{$cdnurl}/fonts/Roboto-Bold.ttf") format('truetype'),
       url("#{$cdnurl}/fonts/Roboto-Bold.svg#b49e654214c0ade376e714f6d9c78d72") format('svg');
  font-style: normal;
  font-weight: 700;
}

@font-face {
  font-family: 'Roboto';
  src: url("#{$cdnurl}/fonts/Roboto-BoldItalic.eot");
  src: url("#{$cdnurl}/fonts/Roboto-BoldItalic.eot#iefix") format('embedded-opentype'),
       url("#{$cdnurl}/fonts/Roboto-BoldItalic.woff") format('woff'),
       url("#{$cdnurl}/fonts/Roboto-BoldItalic.ttf") format('truetype'),
       url("#{$cdnurl}/fonts/Roboto-BoldItalic.svg#4c5461679a335ca94f0d122f23b70c6a") format('svg');
  font-style: italic;
  font-weight: 700;
}

@font-face {
  font-family: 'Roboto';
  src: url("#{$cdnurl}/fonts/Roboto-Regular.eot");
  src: url("#{$cdnurl}/fonts/Roboto-Regular.eot#iefix") format('embedded-opentype'),
       url("#{$cdnurl}/fonts/Roboto-Regular.woff") format('woff'),
       url("#{$cdnurl}/fonts/Roboto-Regular.ttf")  format('truetype'),
       url("#{$cdnurl}/fonts/Roboto-Regular.svg#f4ba68a9596ca53347cecdb9c6e48d01") format('svg');
  font-style: normal;
  font-weight: 400;
}

@font-face {
  font-family: 'Roboto';
  src: url("#{$cdnurl}/fonts/Roboto-Italic.eot");
  src: url("#{$cdnurl}/fonts/Roboto-Italic.eot#iefix") format('embedded-opentype'),
       url("#{$cdnurl}/fonts/Roboto-Italic.woff") format('woff'),
       url("#{$cdnurl}/fonts/Roboto-Italic.ttf")  format('truetype'),
       url("#{$cdnurl}/fonts/Roboto-Italic.svg#d3e7c44ac4f4e64fa2d05ac3d21ebf6e") format('svg');
  font-style: italic;
  font-weight: 400;
}

@font-face {
  font-family: 'Roboto';
  src: url("#{$cdnurl}/fonts/Roboto-Light.eot");
  src: url("#{$cdnurl}/fonts/Roboto-Light.eot#iefix") format('embedded-opentype'),
       url("#{$cdnurl}/fonts/Roboto-Light.woff") format('woff'),
       url("#{$cdnurl}/fonts/Roboto-Light.ttf")  format('truetype'),
       url("#{$cdnurl}/fonts/Roboto-Light.svg#14cfc794995ce651ee6fc06de48ff027") format('svg');
  font-style: normal;
  font-weight: 300;
}

@font-face {
  font-family: 'Roboto';
  src: url("#{$cdnurl}/fonts/Roboto-LightItalic.eot");
  src: url("#{$cdnurl}/fonts/Roboto-LightItalic.eot#iefix") format('embedded-opentype'),
       url("#{$cdnurl}/fonts/Roboto-LightItalic.woff") format('woff'),
       url("#{$cdnurl}/fonts/Roboto-LightItalic.ttf")  format('truetype'),
       url("#{$cdnurl}/fonts/Roboto-LightItalic.svg#efd8343d93408b9a4ac863f89d96cf30") format('svg');
  font-style: italic;
  font-weight: 300;
}

@font-face {
  font-family: 'Roboto';
  src: url("#{$cdnurl}/fonts/Roboto-Thin.eot");
  src: url("#{$cdnurl}/fonts/Roboto-Thin.eot#iefix") format('embedded-opentype'),
       url("#{$cdnurl}/fonts/Roboto-Thin.woff") format('woff'),
       url("#{$cdnurl}/fonts/Roboto-Thin.ttf")  format('truetype'),
       url("#{$cdnurl}/fonts/Roboto-Thin.svg#aa2d497a13c540ad016e99a0baee3c15") format('svg');
  font-style: normal;
  font-weight: 100;
}

@font-face {
  font-family: 'Roboto';
  src: url("#{$cdnurl}/fonts/Roboto-ThinItalic.eot");
  src: url("#{$cdnurl}/fonts/Roboto-ThinItalic.eot#iefix") format('embedded-opentype'),
       url("#{$cdnurl}/fonts/Roboto-ThinItalic.woff") format('woff'),
       url("#{$cdnurl}/fonts/Roboto-ThinItalic.ttf")  format('truetype'),
       url("#{$cdnurl}/fonts/Roboto-ThinItalic.svg#a625651e234cdb237741203e00d10748") format('svg');
  font-style: italic;
  font-weight: 100;
}

// Font
$ff-sans: Roboto, Helvetica, Arial, sans-serif;
$ff-fixed: 'Courier New', Courier, fixed;
$ff-serif: Georgia, 'Times New Roman', Times, serif;

$thin: 100;
$light: 300;
$regular: 400;
$bold: 700;
